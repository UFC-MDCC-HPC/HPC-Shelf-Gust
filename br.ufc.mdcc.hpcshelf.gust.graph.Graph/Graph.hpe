<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000616d0cbbb07ad8e5e179a13771d0f21e1b36323c39eb2145b2312b34b1ca7f8828ccd8121de67ee7fc2759cde4e61d4ffeea9e5b8c8b097463ec09c84c62e9d46e514629dc69f133c93b3d9aa3d391d6e7de3e0adff1e2ebabb8643181d6279666328607ac10b2c450f5efcc9443035e1973e94c1712289994f9b56beff6578f" isAbstract="true" kind="Data" name="Graph" packagePath="br.ufc.mdcc.hpcshelf.gust.graph">
    <baseType>
      <extensionType>
        <extends>true</extends>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000002b679e8f63c6925bfcc928a7cc3013906b15c175a4e98fab23a035f735fa6c0ad73ed2eae507a31345dd1d315a36138fc3377a2b0953350e14b7cf31e6b06c33f4f4ee03b53200f4bfdbaab49b63edb35bda74c698665df952a90b9df4bdf2e6bc62129a9da0a4ba4ee78fb225d5b4353e96afd6e47927b6943bf6ace9cf0cb0" localRef="base" location="br.ufc.mdcc.common.Data/Data.hpe" name="Data" package="br.ufc.mdcc.common" version="1.0.0.0">
        <visualDescription h="60" w="100" x="217" y="340">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds parallel="false" uRef="data">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <parameter componentRef="dataContainer" formFieldId="container" order="1" variance="contravariant" varName="CTN"/>
    <parameter componentRef="vertex_type" formFieldId="vertex_type" order="0" variance="contravariant" varName="V"/>
    <parameter componentRef="edge_type" formFieldId="edge_type" order="1" variance="contravariant" varName="E"/>
    <innerComponent localRef="dataContainer" location="br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer/DataContainer.hpe" multiple="false" name="DataContainer" package="br.ufc.mdcc.hpcshelf.gust.graph.container" parameter_id="container" exposed="false">
      <visualDescription h="60" w="187" x="423" y="252">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="vertex_type" varName="V"/>
      <parameter formFieldId="edge_type" varName="E"/>
      <port localRef="vertex" location="br.ufc.mdcc.hpcshelf.gust.graph.Vertex/Vertex.hpe" multiple="false" name="Vertex" package="br.ufc.mdcc.hpcshelf.gust.graph" exposed="false">
        <visualDescription h="60" w="142" x="446" y="146">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds parallel="false" uRef="data">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </port>
      <port localRef="edgeFactory" location="br.ufc.mdcc.hpcshelf.gust.graph.Edge/Edge.hpe" multiple="false" name="Edge" package="br.ufc.mdcc.hpcshelf.gust.graph" exposed="false">
        <visualDescription h="60" w="161" x="439" y="359">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="vertex_type" varName="V"/>
        <unitBounds parallel="false" uRef="data">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </port>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="vertex_type" location="br.ufc.mdcc.hpcshelf.gust.graph.Vertex/Vertex.hpe" multiple="false" name="Vertex" package="br.ufc.mdcc.hpcshelf.gust.graph" parameter_id="vertex_type" exposed="false">
      <visualDescription h="60" w="200" x="729" y="137">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="edge_type" location="br.ufc.mdcc.hpcshelf.gust.graph.Edge/Edge.hpe" multiple="false" name="Edge" package="br.ufc.mdcc.hpcshelf.gust.graph" parameter_id="edge_type" exposed="false">
      <visualDescription h="60" w="201" x="755" y="234">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="vertex_type" varName="V"/>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <interface iRef="IGraph" nArgs="3">
      <slice isRef="dataContainer">
        <originRef cRef="dataContainer" iRef="IDataContainer"/>
        <visualDescription h="10" w="10" x="62" y="12"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* AUTOMATICALLY GENERATE CODE */&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Edge;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Vertex;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer;&#xA;using br.ufc.mdcc.common.Data;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.graph.Graph&#xA;{&#xA;&#x9;public interface BaseIGraph&lt;CTN, V, E> : BaseIData, IDataStructureKind &#xA;&#x9;&#x9;where CTN:IDataContainer&lt;V, E>&#xA;&#x9;&#x9;where V:IVertex&#xA;&#x9;&#x9;where E:IEdge&lt;V>&#xA;&#x9;{&#xA;&#x9;&#x9;E EdgeFactory {get;}&#xA;&#x9;&#x9;V Vertex {get;}&#xA;&#x9;&#x9;CTN DataContainer {get;}&#xA;&#x9;}&#xA;}" name="BaseIGraph.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.gust.graph.Graph/bin/1.0.0.0/BaseIGraph.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Edge/bin/1.0.0.0/IEdge.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer/bin/1.0.0.0/IDataContainer.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Edge/bin/1.0.0.0/IEdge.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer/bin/1.0.0.0/IDataContainer.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Edge/bin/1.0.0.0/IEdge.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/BaseIData.dll</dependency>
        </file>
        <file contents="using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Vertex;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.Edge;&#xA;using br.ufc.mdcc.common.Data;&#xA;using System;&#xA;using System.Collections.Generic;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.graph.Graph&#xA;{&#xA;&#x9;public interface IGraph&lt;CTN, V, E> : BaseIGraph&lt;CTN, V, E>, IData&#xA;&#x9;&#x9;where CTN:IDataContainer&lt;V, E>&#xA;&#x9;&#x9;where V:IVertex&#xA;&#x9;&#x9;where E:IEdge&lt;V>&#xA;&#x9;{&#xA;&#x9;&#x9;//IInstanceControl&lt;V, E, int, IEdgeInstance&lt;V, int>> InstanceControl { get; }&#xA;&#x9;}&#xA;&#x9;public interface IInstanceControl&lt;V, E, TV, TE>: IDataInstance, ICloneable, ICommon&lt;V, E, TV, TE> where V:IVertex where E:IEdge&lt;V> where TE: IEdgeInstance&lt;V, TV> {&#xA;&#x9;&#x9;ICollection&lt;TE> getAllEdges(TV sourceVertex, TV targetVertex);&#xA;&#x9;&#x9;TE getEdge(TV sourceVertex, TV targetVertex);&#xA;&#x9;&#x9;TE addEdge(TV sourceVertex, TV targetVertex);&#xA;&#x9;&#x9;bool addEdge(TE e);&#xA;&#x9;&#x9;bool containsEdge(TV sourceVertex, TV targetVertex);&#xA;&#x9;&#x9;ICollection&lt;TV> neighborsOf (TV vertex);&#xA;&#x9;&#x9;IEnumerator&lt;TV> iteratorNeighborsOf (TV vertex);&#xA;&#x9;&#x9;bool removeAllEdges(ICollection&lt;TE> edges);&#xA;&#x9;&#x9;ICollection&lt;TE> removeAllEdges(TV sourceVertex, TV targetVertex);&#xA;&#x9;&#x9;bool removeAllVertices(ICollection&lt;TV> vertices);&#xA;&#x9;&#x9;TE removeEdge(TV sourceVertex, TV targetVertex);&#xA;&#x9;&#x9;bool removeEdge(TE e);&#xA;&#x9;&#x9;TV getEdgeSource(TE e);&#xA;&#x9;&#x9;TV getEdgeTarget(TE e);&#xA;&#x9;&#x9;float getEdgeWeight (TE e);&#xA;&#x9;&#x9;void setAllEdgeWeight (TE e, float weight);&#xA;&#x9;&#x9;void setAllEdgeWeight (TV sourceVertex, TV targetVertex, float weight);&#xA;&#x9;&#x9;float getEdgeWeight (TV sourceVertex, TV targetVertex);&#xA;&#x9;}&#xA;&#x9;public interface IGraphHelper&lt;V, E, TV, TE>: ICommon&lt;V, E, TV, TE>, ICloneable where V:IVertex&#x9;where E:IEdge&lt;V> where TE: IEdgeInstance&lt;V, TV>{&#xA;&#x9;&#x9;void addIncomingEdge (TE e);&#xA;&#x9;&#x9;void addOutgoingEdge (TE e);&#xA;&#x9;&#x9;void removeIncomingEdge (TE e);&#xA;&#x9;&#x9;void removeOutgoingEdge (TE e);&#xA;&#x9;&#x9;ICollection&lt;T> incoming&lt;T> (TV vertex);&#xA;&#x9;&#x9;ICollection&lt;T> outgoing&lt;T> (TV vertex);&#xA;&#x9;}&#xA;&#x9;public interface ICommon&lt;V, E, TV, TE> &#xA;&#x9;&#x9;where V:IVertex&#xA;&#x9;&#x9;where E:IEdge&lt;V> &#xA;&#x9;&#x9;where TE: IEdgeInstance&lt;V, TV> {&#xA;&#x9;&#x9;IEnumerator&lt;TE> edgeSet();&#xA;&#x9;&#x9;ICollection&lt;TE> edgesOf (TV vertex);&#xA;&#x9;&#x9;IEnumerator&lt;TE> iteratorEdgesOf (TV vertex);&#xA;&#x9;&#x9;ICollection&lt;TV> vertexSet ();&#xA;&#x9;&#x9;void noSafeAdd (TE e);&#xA;&#x9;&#x9;void noSafeAdd (TV source, TV target);&#xA;&#x9;&#x9;void noSafeAdd (TV source, TV target, float weight);&#xA;&#x9;&#x9;bool addVertex (TV vertex);&#xA;&#x9;&#x9;bool containsEdge(TE e);&#xA;&#x9;&#x9;bool containsVertex (TV v);&#xA;&#x9;&#x9;bool removeVertex (TV v);&#xA;&#x9;&#x9;int countE();&#xA;&#x9;&#x9;int countV();&#xA;&#x9;&#x9;int degreeOf(TV v);&#xA;&#x9;&#x9;IDataContainerInstance&lt;V, E> DataContainer { get; set; }&#xA;&#x9;}&#xA;}&#xA;" name="IGraph.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.gust.graph.Graph/bin/1.0.0.0/IGraph.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.container.DataContainer/bin/1.0.0.0/IDataContainer.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Vertex/bin/1.0.0.0/IVertex.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.Edge/bin/1.0.0.0/IEdge.dll</dependency>
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.gust.graph.Graph/bin/1.0.0.0/BaseIGraph.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="193" x="155" y="153">
        <color b="207" g="159" r="114"/>
      </visualDescription>
      <port name="vertex">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="vertex" sRef="dataContainer"/>
      </port>
      <port name="edgeFactory">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="edgeFactory" sRef="dataContainer"/>
      </port>
      <parameter iname="IDataContainer" parid="container" uname="data" varid="CTN"/>
      <parameter iname="IVertex" order="0" parid="vertex_type" uname="data" varid="V"/>
      <parameter iname="IEdge" order="1" parid="edge_type" uname="data" varid="E"/>
    </interface>
    <unit facet="0" iRef="IGraph" multiple="false" private="false" replica="0" uRef="data" visibleInterface="true">
      <super cRef="base" uRef="data"/>
      <slices cRef="edgeFactory" inner_replica="0" slice_replica="0" uRef="data" sliceName="edgeFactory" transitive="true">
        <visualDescription h="10" w="10" x="62" y="21"/>
      </slices>
      <slices cRef="vertex" inner_replica="0" slice_replica="0" uRef="data" sliceName="vertex" transitive="true">
        <visualDescription h="10" w="10" x="7" y="26"/>
      </slices>
      <slices cRef="dataContainer" inner_replica="0" slice_replica="0" uRef="data" sliceName="dataContainer" transitive="false">
        <visualDescription h="10" w="10" x="62" y="12"/>
        <port>edgeFactory</port>
        <port>vertex</port>
      </slices>
      <visualDescription h="40" w="80" x="228" y="244"/>
    </unit>
  </componentInfo>
</component:component>