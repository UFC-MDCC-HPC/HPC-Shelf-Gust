<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000e329d6a53643eb306dc48521dda023ef22d14fc08b6cade5b6154e4f2b541ed2eb55fc70981d5c219d1f2dd35bdb69a6d66b6ae21ecf991fcd2a1bb00af79ad34f2c031afa7ee1eed9dd012267c82dbd5ccf59714fc520d46b66336a07c2fbe1cec00608e5b216def3f332a11152e263a6ea3ca330d78122ea0ffd015ce4b2a9" isAbstract="false" kind="Data" name="KVPairImpl" packagePath="br.ufc.mdcc.common.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000ebb3897a2bb06809a6732f15788c21fa415682537f4977e12f8ad85082530fed15f306d2cdcda0d5988114ad38a759926b34dd5c58849954752ddab4ba6f75245c839ca636bc2804daefbbc00f57eda4a970464faac4a7b44541b5fc51f99509fc026596e1ccfa729c1398ba6d04d3eeb4c1186d157d7f6b757c04b55eb972ab" localRef="base" location="br.ufc.mdcc.common.KVPair/KVPair.hpe" name="KVPair" package="br.ufc.mdcc.common" version="1.0.0.0">
        <visualDescription h="60" w="100" x="177" y="278">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="value_type" varName="V"/>
        <parameter formFieldId="key_type" varName="K"/>
        <unitBounds parallel="false" uRef="kv_pair">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent localRef="key_type" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="87" y="334">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent localRef="value_type" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="201" y="383">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="value_type" direct="true" varName="V"/>
    <supplyParameter cRef="key_type" direct="true" varName="K"/>
    <interface iRef="IKVPairImpl" nArgs="2">
      <slice isRef="key_type">
        <originRef cRef="key_type" iRef="IData"/>
        <visualDescription h="10" w="10" x="9" y="25"/>
      </slice>
      <slice isRef="value_type">
        <originRef cRef="value_type" iRef="IData"/>
        <visualDescription h="10" w="10" x="63" y="17"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;&#xA;namespace br.ufc.mdcc.common.impl.KVPairImpl { &#xA;&#xA;&#x9;public abstract class BaseIKVPairImpl&lt;K, V>: DataStructure, BaseIKVPair&lt;K, V>&#xA;&#x9;where K:IData&#xA;&#x9;where V:IData&#xA;&#x9;{&#xA;&#xA;&#x9;&#x9;private V value_type = default(V);&#xA;&#xA;&#x9;&#x9;public V Value_type {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.value_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.value_type = (V) Services.getPort(&quot;value_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.value_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private K key_type = default(K);&#xA;&#xA;&#x9;&#x9;public K Key_type {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.key_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.key_type = (K) Services.getPort(&quot;key_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.key_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" name="BaseIKVPairImpl.cs" srcType="base" uri="br.ufc.mdcc.common.impl.KVPairImpl/bin/1.0.0.0/BaseIKVPairImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/BaseIKVPair.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using System.Collections.Generic;&#xA;&#xA;namespace br.ufc.mdcc.common.impl.KVPairImpl { &#xA;&#xA;&#x9;public class IKVPairImpl&lt;K, V> : BaseIKVPairImpl&lt;K, V>, IKVPair&lt;K, V>&#xA;&#x9;where K:IData&#xA;&#x9;where V:IData&#xA;&#x9;{&#xA;&#x9;&#x9;override public void after_initialize()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;newInstance(); &#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;//&#x9;public IKVPairInstance&lt;K,V> newInstance (object k, object v)&#xA;&#x9;//&#x9;{&#xA;&#x9;//&#x9;&#x9;IKVPairInstance&lt;K,V> instance = new IKVPairInstanceImpl&lt;K,V> (k,v);&#xA;&#x9;//&#x9;&#x9;return ( IKVPairInstance&lt;K,V>) (this.Instance = instance);&#xA;&#x9;//&#x9;}&#xA;&#xA;&#x9;&#x9;public object newInstance ()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;object k = Key_type.newInstance();&#xA;&#x9;&#x9;&#x9;object v = Value_type.newInstance();&#xA;&#x9;&#x9;&#x9;return this.Instance = new IKVPairInstanceImpl&lt;K,V> (k,v);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IKVPairInstance&lt;K,V> instance;&#xA;&#xA;&#x9;&#x9;public object Instance {&#xA;&#x9;&#x9;&#x9;get { return instance;&#x9;}&#xA;&#x9;&#x9;&#x9;set { this.instance = (IKVPairInstance&lt;K,V>) value;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;[Serializable]&#xA;&#x9;public class IKVPairInstanceImpl&lt;K,V> : IKVPairInstance&lt;K,V>&#xA;&#x9;&#x9;where K:IData&#xA;&#x9;&#x9;where V:IData&#xA;&#x9;{&#xA;&#x9;&#x9;public IKVPairInstanceImpl(object k, object v)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;this.k = k;&#xA;&#x9;&#x9;&#x9;this.v = v;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;#region IKVPairInstance implementation&#xA;&#xA;&#x9;&#x9;private object k;&#xA;&#x9;&#x9;private object v;&#xA;&#xA;&#x9;&#x9;public object Key {&#xA;&#x9;&#x9;&#x9;get { return k; }&#xA;&#x9;&#x9;&#x9;set { this.k = value; }&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public object Value {&#xA;&#x9;&#x9;&#x9;get { return v; }&#xA;&#x9;&#x9;&#x9;set { this.v = value; }&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public object ObjValue {&#xA;&#x9;&#x9;&#x9;get { return new Tuple&lt;object,object>(k,v); }&#xA;&#x9;&#x9;&#x9;set &#xA;&#x9;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;&#x9;this.k = ((Tuple&lt;object,object>)value).Item1;&#xA;&#x9;&#x9;&#x9;&#x9;this.v = ((Tuple&lt;object,object>)value).Item2;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;#endregion&#xA;&#xA;&#x9;&#x9;#region ICloneable implementation&#xA;&#xA;&#x9;&#x9;public object Clone ()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;IKVPairInstance&lt;K,V> clone = new IKVPairInstanceImpl&lt;K,V>(((ICloneable)this.Key).Clone(), ((ICloneable)this.Value).Clone());&#xA;&#xA;&#x9;&#x9;&#x9;return clone;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;#endregion&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" name="IKVPairImpl.cs" srcType="user" uri="br.ufc.mdcc.common.impl.KVPairImpl/bin/1.0.0.0/IKVPairImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>%WORKSPACE/br.ufc.mdcc.common.impl.KVPairImpl/bin/1.0.0.0/BaseIKVPairImpl.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
        </file>
      </sources>
      <visualDescription h="63" w="142" x="294" y="83">
        <color b="144" g="238" r="144"/>
      </visualDescription>
      <parameter iname="IData" order="0" parid="key_type" uname="data" varid="K"/>
      <parameter iname="IData" order="1" parid="value_type" uname="data" varid="V"/>
    </interface>
    <unit facet="0" iRef="IKVPairImpl" multiple="false" private="false" replica="0" uRef="kv_pair" visibleInterface="true">
      <super cRef="base" uRef="kv_pair"/>
      <visualDescription h="40" w="80" x="412" y="333"/>
    </unit>
  </componentInfo>
</component:component>