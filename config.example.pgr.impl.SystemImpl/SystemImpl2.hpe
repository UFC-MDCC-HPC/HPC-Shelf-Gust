<?xml version="1.0"?><component xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.example.org/HashComponent"><header kind="Application" name="SystemImpl" packagePath="config.example.pgr.impl" hash_component_UID="2484864" isAbstract="false" xmlns=""><baseType><extensionType><implements>true</implements></extensionType><component package="config.example.pgr" name="System" localRef="base" multiple="false"><visualDescription x="10" y="10" w="250" h="150"><color r="20" g="20" b="20" /></visualDescription></component></baseType></header><componentInfo xmlns=""><unit uRef="peer_0" iRef="IPeer_0Impl" private="false" multiple="false" replica="0"><super cRef="base" uRef="peer_0" /><visualDescription x="10" y="10" w="130" h="90"><color r="20" g="20" b="20" /></visualDescription></unit><unit uRef="peer_1" iRef="IPeer_1Impl" private="false" multiple="false" replica="0"><super cRef="base" uRef="peer_1" /><visualDescription x="10" y="10" w="130" h="90"><color r="20" g="20" b="20" /></visualDescription></unit><unit uRef="peer_2" iRef="IPeer_2Impl" private="false" multiple="false" replica="0"><super cRef="base" uRef="peer_2" /><visualDescription x="10" y="10" w="130" h="90"><color r="20" g="20" b="20" /></visualDescription></unit><unit uRef="peer_3" iRef="IPeer_3Impl" private="false" multiple="false" replica="0"><super cRef="base" uRef="peer_3" /><visualDescription x="10" y="10" w="130" h="90"><color r="20" g="20" b="20" /></visualDescription></unit><unit uRef="root" iRef="IRootImpl" private="false" multiple="false" replica="0"><super cRef="base" uRef="root" /><visualDescription x="10" y="10" w="130" h="90"><color r="20" g="20" b="20" /></visualDescription></unit><interface iRef="IPeer_0Impl" nArgs="0"><sources versionId="1.0.0.0" sourceType="C# Language"><file name="IPeer_0Impl.cs" contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated&gt;&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated&gt;&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.datasource.DataSource;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.example.pgr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace config.example.pgr.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_0Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_0 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;            IDataSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost&gt; data_source = ((IDataSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost&gt;)(this.Services.getPort(&quot;data_source&quot;)));&#xA;            Thread go_data_source = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_data_source.Start(data_source);&#xA;            ISplitterReadSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger&gt;&gt; splitter = ((ISplitterReadSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger&gt;&gt;)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            go_data_source.Join();&#xA;            go_splitter.Join();&#xA;        }&#xA;    }&#xA;}&#xA;" srcType="user" /></sources><visualDescription x="10" y="10" w="120" h="80"><color r="20" g="20" b="20" /></visualDescription></interface><interface iRef="IPeer_1Impl" nArgs="0"><sources versionId="1.0.0.0" sourceType="C# Language"><file name="IPeer_1Impl.cs" contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated&gt;&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated&gt;&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.datasource.DataSink;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.example.pgr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace config.example.pgr.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_1Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_1 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;            IDataSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost&gt; data_sink = ((IDataSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost&gt;)(this.Services.getPort(&quot;data_sink&quot;)));&#xA;            Thread go_data_sink = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_data_sink.Start(data_sink);&#xA;            ISplitterWriteSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger&gt; splitter = ((ISplitterWriteSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger&gt;)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            go_data_sink.Join();&#xA;            go_splitter.Join();&#xA;        }&#xA;    }&#xA;}&#xA;" srcType="user" /></sources><visualDescription x="10" y="10" w="120" h="80"><color r="20" g="20" b="20" /></visualDescription></interface><interface iRef="IPeer_2Impl" nArgs="0"><sources versionId="1.0.0.0" sourceType="C# Language"><file name="IPeer_2Impl.cs" contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated&gt;&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated&gt;&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.computation.Mapper;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.example.pgr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace config.example.pgr.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_2Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_2 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;            IMapper&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.WordCounter.IWordCounter&gt; mapper = ((IMapper&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.WordCounter.IWordCounter&gt;)(this.Services.getPort(&quot;mapper&quot;)));&#xA;            Thread go_mapper = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_mapper.Start(mapper);&#xA;            ISplitterMapFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString&gt; splitter = ((ISplitterMapFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString&gt;)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            IShufflerMapCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.String.IString&gt;&gt; shuffler = ((IShufflerMapCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.String.IString&gt;&gt;)(this.Services.getPort(&quot;shuffler&quot;)));&#xA;            Thread go_shuffler = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_shuffler.Start(shuffler);&#xA;            go_mapper.Join();&#xA;            go_splitter.Join();&#xA;            go_shuffler.Join();&#xA;        }&#xA;    }&#xA;}&#xA;" srcType="user" /></sources><visualDescription x="10" y="10" w="120" h="80"><color r="20" g="20" b="20" /></visualDescription></interface><interface iRef="IPeer_3Impl" nArgs="0"><sources versionId="1.0.0.0" sourceType="C# Language"><file name="IPeer_3Impl.cs" contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated&gt;&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated&gt;&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.computation.Reducer;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Shuffler;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.Splitter;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.example.pgr.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace config.example.pgr.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_3Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_3 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;            IReducer&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.Tallier.ITallier&gt; reducer = ((IReducer&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.Tallier.ITallier&gt;)(this.Services.getPort(&quot;reducer&quot;)));&#xA;            Thread go_reducer = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_reducer.Start(reducer);&#xA;            ISplitterReduceCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger&gt;, br.ufc.mdcc.hpcshelf.mapreduce.custom.TerminateFunction.ITerminateFunction&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger&gt;&gt; splitter = ((ISplitterReduceCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger&gt;, br.ufc.mdcc.hpcshelf.mapreduce.custom.TerminateFunction.ITerminateFunction&lt;br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger&gt;&gt;)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            IShufflerReduceFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger&gt; shuffler = ((IShufflerReduceFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger&gt;)(this.Services.getPort(&quot;shuffler&quot;)));&#xA;            Thread go_shuffler = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_shuffler.Start(shuffler);&#xA;            go_reducer.Join();&#xA;            go_splitter.Join();&#xA;            go_shuffler.Join();&#xA;        }&#xA;    }&#xA;}&#xA;" srcType="user" /></sources><visualDescription x="10" y="10" w="120" h="80"><color r="20" g="20" b="20" /></visualDescription></interface><interface iRef="IRootImpl" nArgs="0"><sources versionId="1.0.0.0" sourceType="C# Language"><file name="IRootImpl.cs" contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated&gt;&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated&gt;&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.example.pgr.Application;&#xA;using config.example.pgr.System;&#xA;using config.example.pgr.Workflow;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace config.example.pgr.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IRootImpl : br.ufc.pargo.hpe.kinds.Application, IRoot {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;            IWorkflow workflow = ((IWorkflow)(this.Services.getPort(&quot;workflow&quot;)));&#xA;            Thread go_workflow = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_workflow.Start(workflow);&#xA;            IApplication application = ((IApplication)(this.Services.getPort(&quot;application&quot;)));&#xA;            Thread go_application = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_application.Start(application);&#xA;            go_workflow.Join();&#xA;            go_application.Join();&#xA;        }&#xA;    }&#xA;}&#xA;" srcType="user" /></sources><visualDescription x="10" y="10" w="120" h="80"><color r="20" g="20" b="20" /></visualDescription></interface></componentInfo></component>