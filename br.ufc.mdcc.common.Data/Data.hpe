<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000002b679e8f63c6925bfcc928a7cc3013906b15c175a4e98fab23a035f735fa6c0ad73ed2eae507a31345dd1d315a36138fc3377a2b0953350e14b7cf31e6b06c33f4f4ee03b53200f4bfdbaab49b63edb35bda74c698665df952a90b9df4bdf2e6bc62129a9da0a4ba4ee78fb225d5b4353e96afd6e47927b6943bf6ace9cf0cb0" isAbstract="true" kind="Data" name="Data" packagePath="br.ufc.mdcc.common">
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IData" nArgs="0">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* AUTOMATICALLY GENERATE CODE */&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;&#xA;namespace br.ufc.mdcc.common.Data { &#xA;&#xA;public interface BaseIData : IDataStructureKind &#xA;{&#xA;&#xA;&#xA;&#xA;} // end main interface &#xA;&#xA;} // end namespace &#xA;" name="BaseIData.cs" srcType="base" uri="br.ufc.mdcc.common.Data/bin/1.0.0.0/BaseIData.dll" versionId="1.0.0.0"/>
        <file contents="using br.ufc.pargo.hpe.kinds;&#xA;&#xA;namespace br.ufc.mdcc.common.Data { &#xA;&#xA;public interface IData : BaseIData&#xA;{&#xA;&#x9;&#x9;// void loadFrom (IData o);&#xA;&#x9;&#x9;// IData newInstance ();&#xA;&#x9;&#x9;// IData clone();&#xA;&#xA;&#x9;&#x9;object Instance { get; set;}&#xA;&#x9;&#x9;object newInstance ();&#xA;&#xA;} // end main interface &#xA;&#xA;&#x9;public interface IDataInstance&#xA;&#x9;{&#xA;&#x9;&#x9;object ObjValue { set; get; }&#xA;&#x9;}&#xA;&#xA;} // end namespace &#xA;" name="IData.cs" srcType="user" uri="br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.common.Data/bin/1.0.0.0/BaseIData.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="80" x="112" y="105">
        <color b="0" g="255" r="255"/>
      </visualDescription>
    </interface>
    <unit facet="0" iRef="IData" multiple="false" private="false" replica="0" uRef="data" visibleInterface="true">
      <visualDescription h="40" w="80" x="226" y="204"/>
    </unit>
  </componentInfo>
</component:component>