<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000007172dd0c819cba40ca68d46fe79f0c4caee61d1200508039d29b155064de6928a2e88ae3b249c22097cacd437c4103f7c15f358f4f6db20fad7b4b784f1bcc37ee5f9157b1562e8d9dbac92c43c39da588de404c5b1bb97b398595fa1876f40f7d61d0c467053294b617adc157369cfb68dfc5c023cf44ff29377caad4d576d6" isAbstract="false" kind="Application" name="SystemImpl" packagePath="config.example.tc.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009500085125b029988bf5f81ab25ae8a4bcae2e8eff90fff4457e77aa4f6a183e38119743c09601800dde9b767d36b56f272fd4fa4f3c59db3aa3cdc1ccc3fb757a886be51d46fbefc2259dd1b4fabfc7e5f1c94dba20398e930f360dd5c5574139f839bac98e632408663c501113dafebee11d268f4230cca24c84e73ca90fc1" localRef="base" location="config.example.tc.System/System.hpe" name="System" package="config.example.tc" version="1.0.0.0">
        <visualDescription h="60" w="100" x="316" y="274">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds parallel="true" uRef="peer_0">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
        <unitBounds parallel="true" uRef="peer_1">
          <visualDescription h="20" w="20" x="28" y="2"/>
        </unitBounds>
        <unitBounds parallel="true" uRef="root">
          <visualDescription h="20" w="20" x="51" y="2"/>
        </unitBounds>
        <unitBounds parallel="true" uRef="peer_2">
          <visualDescription h="20" w="20" x="74" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IPeer_0Impl" nArgs="0">
      <slice isRef="data_source">
        <originRef cRef="data_source" iRef="IDataSource"/>
        <visualDescription h="10" w="10" x="14" y="8"/>
      </slice>
      <slice isRef="join_loop">
        <originRef cRef="join_loop" iRef="IJoinLoopReadSource"/>
        <visualDescription h="10" w="10" x="27" y="6"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.JoinLoop;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.datasource.DataSource;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.example.tc.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace config.example.tc.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_0Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_0 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;          /*  IDataSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost> data_source = ((IDataSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost>)(this.Services.getPort(&quot;data_source&quot;)));&#xA;            Thread go_data_source = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_data_source.Start(data_source);&#xA;            ISplitterReadSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger>> splitter = ((ISplitterReadSource&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.Integer.IInteger>>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            go_data_source.Join();&#xA;            go_splitter.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_0Impl.cs" srcType="user" uri="config.example.tc.impl.SystemImpl/bin/1.0.0.0/IPeer_0Impl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/config.example.tc.impl.SystemImpl/bin/1.0.0.0/BaseIPeer_0Impl.dll</dependency>
          <dependency>config.example.tc.System/bin/1.0.0.0/IPeer_0.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="142" x="111" y="327">
        <color b="79" g="233" r="252"/>
      </visualDescription>
      <port name="platform_data_source">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_data_source" sRef="data_source"/>
      </port>
      <port name="input_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="reader" sRef="data_source"/>
      </port>
      <port name="input_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="source" sRef="join_loop"/>
      </port>
      <port name="platform_data_source">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_data_source" sRef="join_loop"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="join_loop"/>
      </port>
      <port name="task_binding_split_first">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_first" sRef="join_loop"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IPeer_1Impl" nArgs="0">
      <slice isRef="data_sink">
        <originRef cRef="data_sink" iRef="IDataSink"/>
        <visualDescription h="10" w="10" x="15" y="7"/>
      </slice>
      <slice isRef="join_loop">
        <originRef cRef="join_loop" iRef="IJoinLoopWriteSink"/>
        <visualDescription h="10" w="10" x="5" y="6"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.JoinLoop;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.datasource.DataSink;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.example.tc.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace config.example.tc.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_1Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_1 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;         /*   IDataSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost> data_sink = ((IDataSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost>)(this.Services.getPort(&quot;data_sink&quot;)));&#xA;            Thread go_data_sink = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_data_sink.Start(data_sink);&#xA;            ISplitterWriteSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger> splitter = ((ISplitterWriteSink&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.DataHost.IDataHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            go_data_sink.Join();&#xA;            go_splitter.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_1Impl.cs" srcType="user" uri="config.example.tc.impl.SystemImpl/bin/1.0.0.0/IPeer_1Impl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/config.example.tc.impl.SystemImpl/bin/1.0.0.0/BaseIPeer_1Impl.dll</dependency>
          <dependency>config.example.tc.System/bin/1.0.0.0/IPeer_1.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="165" x="299" y="434">
        <color b="79" g="233" r="252"/>
      </visualDescription>
      <port name="output_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="writer" sRef="data_sink"/>
      </port>
      <port name="platform_data_sink">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_data_sink" sRef="data_sink"/>
      </port>
      <port name="platform_data_sink">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_data_sink" sRef="join_loop"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="join_loop"/>
      </port>
      <port name="output_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="sink" sRef="join_loop"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IRootImpl" nArgs="0">
      <slice isRef="workflow">
        <originRef cRef="workflow" iRef="IWorkflow"/>
        <visualDescription h="10" w="10" x="35" y="26"/>
      </slice>
      <slice isRef="application">
        <originRef cRef="application" iRef="IApplication"/>
        <visualDescription h="10" w="10" x="6" y="6"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.Application;&#xA;using config.example.tc.System;&#xA;using config.phase1.Workflow;&#xA;using System;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.hpcshelf.platform.maintainer.SAFeHost;&#xA;&#xA;&#xA;namespace config.example.tc.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IRootImpl : br.ufc.pargo.hpe.kinds.Application, IRoot {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;&#x9;&#x9;/*&#x9;IWorkflow&lt;ISAFeHost> workflow = ((IWorkflow&lt;ISAFeHost>)(this.Services.getPort(&quot;workflow&quot;)));&#xA;            Thread go_workflow = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_workflow.Start(workflow);&#xA;&#x9;&#x9;&#x9;IApplication&lt;ISAFeHost> application = ((IApplication&lt;ISAFeHost>)(this.Services.getPort(&quot;application&quot;)));&#xA;            Thread go_application = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_application.Start(application);&#xA;            go_workflow.Join();&#xA;            go_application.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IRootImpl.cs" srcType="user" uri="config.example.tc.impl.SystemImpl/bin/1.0.0.0/IRootImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/config.example.tc.impl.SystemImpl/bin/1.0.0.0/BaseIRootImpl.dll</dependency>
          <dependency>config.example.tc.System/bin/1.0.0.0/IRoot.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="148" x="284" y="107">
        <color b="6" g="154" r="78"/>
      </visualDescription>
      <port name="task_binding_split_next">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_next" sRef="workflow"/>
      </port>
      <port name="task_binding_split_first">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_first" sRef="workflow"/>
      </port>
      <port name="task_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_gusty" sRef="workflow"/>
      </port>
      <port name="platform_SAFe">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_SAFe" sRef="workflow"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="workflow"/>
      </port>
      <port name="platform_SAFe">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_SAFe" sRef="application"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IPeer_2Impl" nArgs="0">
      <slice isRef="join_loop">
        <originRef cRef="join_loop" iRef="IJoinLoop"/>
        <visualDescription h="10" w="10" x="2" y="8"/>
      </slice>
      <slice isRef="reducer">
        <originRef cRef="reducer" iRef="IReducer"/>
        <visualDescription h="10" w="10" x="39" y="7"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="// ------------------------------------------------------------------------------&#xA;//  &lt;autogenerated>&#xA;//      This code was generated by a tool.&#xA;//      Mono Runtime Version: 4.0.30319.17020&#xA;// &#xA;//      Changes to this file may cause incorrect behavior and will be lost if &#xA;//      the code is regenerated.&#xA;//  &lt;/autogenerated>&#xA;// ------------------------------------------------------------------------------&#xA;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.connector.JoinLoop;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using config.example.tc.System;&#xA;using System;&#xA;using System.Threading;&#xA;&#xA;&#xA;namespace config.example.tc.impl.SystemImpl {&#xA;    &#xA;    &#xA;    public class IPeer_2Impl : br.ufc.pargo.hpe.kinds.Application, IPeer_2 {&#xA;        &#xA;        private void Go(Object o) {&#xA;            ((Activate)(o)).go();&#xA;        }&#xA;        &#xA;        public override void main() {&#xA;          /*  IMapper&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.WordCounter.IWordCounter> mapper = ((IMapper&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.example.cw.WordCounter.IWordCounter>)(this.Services.getPort(&quot;mapper&quot;)));&#xA;            Thread go_mapper = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_mapper.Start(mapper);&#xA;            ISplitterMapFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString> splitter = ((ISplitterMapFeeder&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.common.String.IString>)(this.Services.getPort(&quot;splitter&quot;)));&#xA;            Thread go_splitter = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_splitter.Start(splitter);&#xA;            IShufflerMapCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.String.IString>> shuffler = ((IShufflerMapCollector&lt;br.ufc.mdcc.hpcshelf.platform.maintainer.ComputeHost.IComputeHost, br.ufc.mdcc.common.String.IString, br.ufc.mdcc.common.Integer.IInteger, br.ufc.mdcc.hpcshelf.mapreduce.custom.PartitionFunction.IPartitionFunction&lt;br.ufc.mdcc.common.String.IString>>)(this.Services.getPort(&quot;shuffler&quot;)));&#xA;            Thread go_shuffler = new Thread(new ParameterizedThreadStart(this.Go));&#xA;            go_shuffler.Start(shuffler);&#xA;            go_mapper.Join();&#xA;            go_splitter.Join();&#xA;            go_shuffler.Join();*/&#xA;        }&#xA;    }&#xA;}&#xA;" name="IPeer_2Impl.cs" srcType="user" uri="config.example.tc.impl.SystemImpl/bin/1.0.0.0/IPeer_2Impl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/config.example.tc.impl.SystemImpl/bin/1.0.0.0/BaseIPeer_2Impl.dll</dependency>
          <dependency>config.example.tc.System/bin/1.0.0.0/IPeer_2.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="168" x="597" y="271">
        <color b="79" g="233" r="252"/>
      </visualDescription>
      <port name="task_binding_split_next">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_next" sRef="join_loop"/>
      </port>
      <port name="output_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="join_loop"/>
      </port>
      <port name="task_binding_split_first">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_split_first" sRef="join_loop"/>
      </port>
      <port name="output_graph">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_graph" sRef="join_loop"/>
      </port>
      <port name="platform_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_reduce" sRef="join_loop"/>
      </port>
      <port name="input_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="join_loop"/>
      </port>
      <port name="task_binding_data">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_binding_data" sRef="join_loop"/>
      </port>
      <port name="input_graph">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_graph" sRef="join_loop"/>
      </port>
      <port name="output_graph">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_graph" sRef="reducer"/>
      </port>
      <port name="platform_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="platform_reduce" sRef="reducer"/>
      </port>
      <port name="input_graph">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_graph" sRef="reducer"/>
      </port>
      <port name="output_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="feed_pairs" sRef="reducer"/>
      </port>
      <port name="task_reduce">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="task_reduce" sRef="reducer"/>
      </port>
      <port name="input_pairs">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="collect_pairs" sRef="reducer"/>
      </port>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IPeer_0Impl" multiple="true" private="false" replica="0" uRef="peer_0" visibleInterface="true">
      <super cRef="base" uRef="peer_0"/>
      <visualDescription h="40" w="65" x="144" y="270"/>
    </unit>
    <unit facet="0" iRef="IPeer_1Impl" multiple="true" private="false" replica="0" uRef="peer_1" visibleInterface="true">
      <super cRef="base" uRef="peer_1"/>
      <visualDescription h="40" w="61" x="339" y="359"/>
    </unit>
    <unit facet="0" iRef="IRootImpl" multiple="true" private="false" replica="0" uRef="root" visibleInterface="true">
      <super cRef="base" uRef="root"/>
      <visualDescription h="40" w="56" x="343" y="177"/>
    </unit>
    <unit facet="0" iRef="IPeer_2Impl" multiple="true" private="false" replica="0" uRef="peer_2" visibleInterface="true">
      <super cRef="base" uRef="peer_2"/>
      <visualDescription h="40" w="63" x="476" y="273"/>
    </unit>
  </componentInfo>
</component:component>