<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000319ebd6a6d3199cfffc0663e14ff458ee8ccb9fbba04bf2cd78772906dc509b3dbf3b673b465198347d42434694105303ba2e67e477eb798c3a2788983489167813bb8764b3259b2ba91dfd95a9bf8fa094b5b54bb8ffa310ddec2cb3b92923477ea536a705c040c1534f9e29ea6dc2a04ce21092382f6ecbe368ac9e7b171b5" isAbstract="false" kind="Synchronizer" name="EnvironmentBindingReadData" packagePath="br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="002400000480000094000000060200000024000052534131000400001100000061a1a4b8244411d14939f3fc57591714640762a00ad3300e5b6334dd0ef9b2352ecab70aaa6cea5a10ee69f4a9ff9791516f1a7cc013fbe7b35f98565fd7a15ed89d4330741151902f234b21588e9aac06e188b9380324fc698d7611b7113a534e41e39f691fc8ea400b7e0fa0d75a593acaeabf906deb8330e1e2df0e95bbac" localRef="base" location="br.ufc.mdcc.hpcshelf.mapreduce.binding.environment.EnvironmentBindingReadData/EnvironmentBindingReadData.hpe" name="EnvironmentBindingReadData" package="br.ufc.mdcc.hpcshelf.mapreduce.binding.environment" version="1.0.0.0">
        <visualDescription h="60" w="100" x="234" y="458">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="server_port_type" varName="S"/>
        <unitBounds parallel="false" uRef="client_server">
          <visualDescription h="20" w="20" x="51" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent localRef="s" location="br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSourceInterface/PortTypeDataSourceInterface.hpe" multiple="false" name="PortTypeDataSourceInterface" package="br.ufc.mdcc.hpcshelf.mapreduce.port.environment" exposed="false">
      <visualDescription h="60" w="100" x="446" y="635">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="true" uRef="environment_port_type">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="s" direct="true" varName="S"/>
    <interface iRef="IReadDataImpl" nArgs="1">
      <slice isRef="input_pairs_iterator">
        <originRef cRef="input_pairs_iterator" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="44" y="22"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentPortType;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSourceInterface;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.environment.EnvironmentBindingReadData;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.InputFormat;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingReadData &#xA;{&#xA;&#x9;public abstract class BaseIReadDataImpl&lt;S>: Synchronizer, BaseIReadData&lt;S>&#xA;&#x9;&#x9;//where C:IPortTypeIterator&#xA;&#x9;&#x9;where S:IPortTypeDataSourceInterface&#xA;&#x9;{&#xA;&#x9;&#x9;private IPortTypeIterator client_port_type = null;&#xA;&#x9;&#x9;protected IPortTypeIterator Client_port_type&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.client_port_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.client_port_type = (IPortTypeIterator) Services.getPort(&quot;client_port_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.client_port_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private S server_port_type = default(S);&#xA;&#x9;&#x9;protected S Server_port_type&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.server_port_type == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.server_port_type = (S) Services.getPort(&quot;server_port_type&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.server_port_type;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IInteger,IInputFormat>> input_pairs_iterator = null;&#xA;&#x9;&#x9;protected IIterator&lt;IKVPair&lt;IInteger,IInputFormat>> Input_pairs_iterator&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_pairs_iterator == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_pairs_iterator = (IIterator&lt;IKVPair&lt;IInteger,IInputFormat>>) Services.getPort(&quot;input_pairs_iterator&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_pairs_iterator;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;}" name="BaseIReadDataImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingReadData/bin/1.0.0.0/BaseIReadDataImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect/bin/1.0.0.0/BaseIBindingDirect.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBase;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeIterator;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.port.environment.PortTypeDataSourceInterface;&#xA;using br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.InputFormat;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using System.Threading;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.hpcshelf.mapreduce.binding.environment.EnvironmentBindingReadData;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingReadData&#xA;{&#xA;&#x9;public class IReadDataImpl&lt;S> : BaseIReadDataImpl&lt;S>, IReadData&lt;S>&#xA;&#x9;&#x9;where S:IPortTypeDataSourceInterface&#xA;&#x9;{&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private Thread thread_file_reader = null;&#xA;&#xA;&#x9;&#x9;public override void after_initialize()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;client = Input_pairs_iterator.newIteratorInstance ();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public void startReadSource (int part_size) &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;partition_size = part_size;   &#xA;&#x9;&#x9;&#x9;thread_file_reader = new Thread (file_reader);&#xA;&#x9;&#x9;&#x9;thread_file_reader.Start ();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IPortTypeIterator client = null;&#xA;&#x9;&#x9;public IPortTypeIterator Client { get {&#x9;return client; } }&#xA;&#x9;&#x9;&#xA;&#x9;&#x9;private S server = default(S);&#xA;&#x9;&#x9;public S Server { set {&#x9;server = value; } }&#xA;&#xA;&#x9;&#x9;private static int CHUNK_SIZE = 50;&#xA;&#xA;&#x9;&#x9;private string[] file_name_list = null;&#x9;&#xA;&#xA;&#x9;&#x9;int counter_write_chunk = 0; //int counter_write_global = 0;&#xA;&#x9;&#x9;int partition_size;&#xA;&#xA;&#x9;&#x9;private void file_reader () {&#xA;&#x9;&#x9;&#x9;string fileName = System.Environment.GetEnvironmentVariable (&quot;PATH_GRAPH_FILE&quot;);&#xA;&#xA;&#x9;&#x9;&#x9;IInputFormatInstance extractor_input_format = (IInputFormatInstance) server.fetchFileContentObject ();&#xA;&#x9;&#x9;&#x9;extractor_input_format.PARTITION_SIZE = partition_size;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int, IInputFormatInstance> sub_formats = extractor_input_format.extractBins (fileName);&#xA;&#xA;&#x9;&#x9;&#x9;foreach (IInputFormatInstance shard in sub_formats.Values) {&#xA;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,IInputFormat> item = (IKVPairInstance&lt;IInteger,IInputFormat>)client.createItem ();&#xA;&#x9;&#x9;&#x9;&#x9;int first_vertex_id_from_partition = shard.firstVertex (shard.PARTID);&#xA;&#x9;&#x9;&#x9;&#x9;((IIntegerInstance)item.Key).Value = first_vertex_id_from_partition; //counter_write_global;&#xA;&#x9;&#x9;&#x9;&#x9;item.Value = shard;&#xA;&#x9;&#x9;&#x9;&#x9;client.put (item);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;counter_write_chunk++; //counter_write_global++;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;if (counter_write_chunk >= CHUNK_SIZE) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine (&quot;NEW CHUNK size=&quot; + counter_write_chunk);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;counter_write_chunk = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;client.finish ();&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;client.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;client.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;Console.WriteLine (&quot;FINISHING READING DATA SOURCE&quot;);&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="IReadDataImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingReadData/bin/1.0.0.0/IReadDataImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.mapreduce.impl.binding.environment.EnvironmentBindingReadData/bin/1.0.0.0/BaseIReadDataImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpc.storm.binding.environment.EnvironmentBindingBaseDirect/bin/1.0.0.0/IBindingDirect.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="180" x="158" y="271">
        <color b="0" g="0" r="255"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IReadDataImpl" multiple="false" private="false" replica="0" uRef="client_server" visibleInterface="true">
      <super cRef="base" uRef="client_server"/>
      <visualDescription h="40" w="190" x="169" y="365"/>
    </unit>
  </componentInfo>
</component:component>