<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000021d66e576358bcd8ed05d9a5409fbe26b93429190d0614d63b300aa45d15627169bb5079d0fb7cb6f4d530fb91c44cb02581cc95e2f630c7c9192afbc9d888865d7a218e810ab88b985e9d1c5eb267b36a8404bd855cb7ac045e49fa70ba1cc7894f6e61aa988c104d8e7b392855cf50f8b1962d6cd6c086f4a9b9134fed6fa5" isAbstract="false" kind="Computation" name="TriangleCountImpl" packagePath="br.ufc.mdcc.hpcshelf.gust.example.tc">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000e390ee2948887928f9973b50c59fd93fe2d93bf41d297e1e92ef99cb979ee7eefb1d47c9b133776813410e1531047bcf3eb86598cf3a537faed825a369d2008fee25c11701113ea6a5520be4deb6164e9ba215820ac586f5a4954008d6c3294125099381f98b1b2c1afc059deb9bbb92fa98437472c86b692138f9f725052c91" localRef="base" location="br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCount/TriangleCount.hpe" name="TriangleCount" package="br.ufc.mdcc.hpcshelf.gust.example.tc" version="1.0.0.0">
        <visualDescription h="60" w="100" x="334" y="388">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <port localRef="input_values" location="br.ufc.mdcc.common.KVPair/KVPair.hpe" multiple="false" name="KVPair" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="181" x="83" y="366">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="value_type" varName="X###542074785"/>
          <parameter formFieldId="key_type" varName="TKey"/>
          <unitBounds parallel="false" uRef="kv_pair">
            <visualDescription h="20" w="20" x="137" y="20"/>
          </unitBounds>
        </port>
        <port localRef="output" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="134" x="495" y="372">
            <color b="203" g="192" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###1025280921"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="9" y="20"/>
          </unitBounds>
        </port>
        <port localRef="graph_values" location="br.ufc.mdcc.common.KVPair/KVPair.hpe" multiple="false" name="KVPair" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="56" w="225" x="79" y="454">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="value_type" varName="X###487655719"/>
          <parameter formFieldId="key_type" varName="X###1232072281"/>
          <unitBounds parallel="false" uRef="kv_pair">
            <visualDescription h="20" w="20" x="189" y="15"/>
          </unitBounds>
        </port>
        <port localRef="output_gif" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="157" x="496" y="449">
            <color b="203" g="192" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###1401502393"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="false" uRef="gusty_function">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="ITriangleCountImpl" nArgs="0">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.hpcshelf.gust.graph.InputFormat;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.gust.example.tc.DataTriangle;&#xA;using br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCount;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCountImpl &#xA;{&#xA;&#x9;public abstract class BaseITriangleCountImpl: Computation, BaseITriangleCount&#xA;&#x9;{&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IInteger, IInputFormat>> output_gif = null;&#xA;&#xA;&#x9;&#x9;public IIterator&lt;IKVPair&lt;IInteger, IInputFormat>> Output_gif&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_gif == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_gif = (IIterator&lt;IKVPair&lt;IInteger, IInputFormat>>) Services.getPort(&quot;output_gif&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_gif;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IData graph = null;&#xA;&#xA;&#x9;&#x9;protected IData Graph&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.graph == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.graph = (IData) Services.getPort(&quot;graph&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.graph;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IData continuation_value = null;&#xA;&#xA;&#x9;&#x9;protected IData Continuation_value&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.continuation_value == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.continuation_value = (IData) Services.getPort(&quot;continuation_value&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.continuation_value;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IKVPair&lt;IInteger, IIterator&lt;IDataTriangle>> input_values = null;&#xA;&#xA;&#x9;&#x9;public IKVPair&lt;IInteger, IIterator&lt;IDataTriangle>> Input_values&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_values == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_values = (IKVPair&lt;IInteger, IIterator&lt;IDataTriangle>>) Services.getPort(&quot;input_values&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_values;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IKVPair&lt;IInteger, IIterator&lt;IInputFormat>> graph_values = null;&#xA;&#xA;&#x9;&#x9;public IKVPair&lt;IInteger, IIterator&lt;IInputFormat>> Graph_values&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.graph_values == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.graph_values = (IKVPair&lt;IInteger, IIterator&lt;IInputFormat>>) Services.getPort(&quot;graph_values&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.graph_values;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IInteger, IDataTriangle>> output = null;&#xA;&#xA;&#x9;&#x9;public IIterator&lt;IKVPair&lt;IInteger, IDataTriangle>> Output&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;get&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output = (IIterator&lt;IKVPair&lt;IInteger, IDataTriangle>>) Services.getPort(&quot;output&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}" name="BaseITriangleCountImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCountImpl/bin/1.0.0.0/BaseITriangleCountImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
          <dependency>br.ufc.mdcc.common.Integer/bin/1.0.0.0/IInteger.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.graph.InputFormat/bin/1.0.0.0/IInputFormat.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.example.tc.DataTriangle/bin/1.0.0.0/IDataTriangle.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCount/bin/1.0.0.0/BaseITriangleCount.dll</dependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCount;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCountImpl&#xA;{&#xA;&#x9;public class ITriangleCountImpl : BaseITriangleCountImpl, ITriangleCount&#xA;&#x9;{&#xA;&#x9;&#x9;public override void main()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" name="ITriangleCountImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCountImpl/bin/1.0.0.0/ITriangleCountImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCountImpl/bin/1.0.0.0/BaseITriangleCountImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.example.tc.TriangleCount/bin/1.0.0.0/ITriangleCount.dll</dependency>
        </file>
      </sources>
      <visualDescription h="43" w="199" x="98" y="206">
        <color b="0" g="165" r="255"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="ITriangleCountImpl" multiple="false" private="false" replica="0" uRef="gusty_function" visibleInterface="true">
      <super cRef="base" uRef="gusty_function"/>
      <visualDescription h="40" w="190" x="273" y="295"/>
    </unit>
  </componentInfo>
</component:component>