<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000bbd6c81af54305aba11c8a32b633c73f85c9c739a65ef2b387f61d964e86d1a532db31739bc37a0f4aa043229e7e8f53a38e84810402092f3720da887b1448d4b3d5d27c0b477a2d3e8e531d2ada2aa78b10d8403ec37cd8a7851160e725ff2bb9c087d31f5d6c7e5f78c202e6972cb787a42f0bb39658401d10f31ae0100d9c" isAbstract="false" kind="Computation" name="WordCounterImpl" packagePath="br.ufc.mdcc.hpcshelf.gust.example.cw.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000f5059ab5c24a489eac62ac8f467d8d2a475001261c39479d7e893834a17eaa6dce885b800f1c480c7b4eaa45d3900d09451c5cf7cc01d1c3f4ddd5ec44449bb636df562c83288c42a530f579575f37b251a2172d53b92fb3de52832c2be2b15d3ff6c3932eeab1dfa16fdf7ee21a0a492d225d793fcf95f4989b84b971e70985" localRef="base" location="br.ufc.mdcc.hpcshelf.gust.example.cw.WordCounter/WordCounter.hpe" name="WordCounter" package="br.ufc.mdcc.hpcshelf.gust.example.cw" version="1.0.0.0">
        <visualDescription h="60" w="100" x="139" y="204">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <port localRef="input_key" location="br.ufc.mdcc.common.Integer/Integer.hpe" multiple="false" name="Integer" package="br.ufc.mdcc.common" exposed="false">
          <visualDescription h="60" w="100" x="118" y="401">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="data">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port localRef="input_value" location="br.ufc.mdcc.common.String/String.hpe" multiple="false" name="String" package="br.ufc.mdcc.common" exposed="false">
          <visualDescription h="60" w="100" x="395" y="331">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="data">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port localRef="output_data" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="69" w="188" x="244" y="453">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###377240188"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="false" uRef="map_function">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IWordCounterImpl" nArgs="0">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.hpcshelf.gust.example.cw.WordCounter;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.example.cw.impl.WordCounterImpl { &#xA;&#xA;public abstract class BaseIWordCounterImpl: Computation, BaseIWordCounter&#xA;{&#xA;&#xA;&#x9;private IIterator&lt;IKVPair&lt;IString,IInteger>> output_data = null;&#xA;&#xA;&#x9;public IIterator&lt;IKVPair&lt;IString,IInteger>> Output_data {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.output_data == null)&#xA;&#x9;&#x9;&#x9;&#x9;this.output_data = (IIterator&lt;IKVPair&lt;IString,IInteger>>) Services.getPort(&quot;output_data&quot;);&#xA;&#x9;&#x9;return this.output_data;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#x9;private IInteger input_key = null;&#xA;&#xA;&#x9;public IInteger Input_key {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.input_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;this.input_key = (IInteger) Services.getPort(&quot;input_key&quot;);&#xA;&#x9;&#x9;return this.input_key;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#x9;private IString input_value = null;&#xA;&#xA;&#x9;public IString Input_value {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.input_value == null)&#xA;&#x9;&#x9;&#x9;&#x9;this.input_value = (IString) Services.getPort(&quot;input_value&quot;);&#xA;&#x9;&#x9;return this.input_value;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" name="BaseIWordCounterImpl.cs" srcType="base" uri="br.ufc.mdcc.hpcshelf.gust.example.cw.impl.WordCounterImpl/bin/1.0.0.0/BaseIWordCounterImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.example.cw.WordCounter/bin/1.0.0.0/BaseIWordCounter.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.hpcshelf.gust.example.cw.WordCounter;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;&#xA;namespace br.ufc.mdcc.hpcshelf.gust.example.cw.impl.WordCounterImpl { &#xA;&#xA;&#x9;public class IWordCounterImpl : BaseIWordCounterImpl, IWordCounter&#xA;&#x9;{&#xA;&#xA;&#x9;&#x9;public IWordCounterImpl() { } &#xA;&#xA;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;IStringInstance input_value_instance = (IStringInstance) Input_value.Instance;&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IString,IInteger>> output_value_instance = (IIteratorInstance&lt;IKVPair&lt;IString,IInteger>>) Output_data.Instance;&#xA;&#xA;&#x9;&#x9;&#x9;string input_string = input_value_instance.Value;&#xA;&#x9;&#x9;&#x9;string chars = &quot; ;?.!:,*&lt;>+&quot;;&#xA;&#x9;&#x9;&#x9;string[] words = input_string.Split(new char[] {chars[0],chars[1],chars[2],chars[3],chars[4],chars[5],chars[6],chars[7],chars[8],chars[9],chars[10]});&#xA;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;string, int> index = new Dictionary&lt;string,int>();&#xA;&#x9;&#x9;&#x9;foreach (string word_ in words) &#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;string word = word_.ToLower().Trim();&#xA;&#x9;&#x9;&#x9;&#x9;if (word!=&quot;&quot;)&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int counter;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (index.TryGetValue(word, out counter))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;index.Remove(word);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;counter = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;index.Add(word, counter+1);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;foreach (KeyValuePair&lt;string,int> occurrences in index)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;//&#x9;Trace.WriteLine(WorldComm.Rank + &quot;: MAP (WORD COUNTER) - &quot; + occurrences.Key + &quot;:&quot; + occurrences.Value);&#xA;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IString,IInteger> item = (IKVPairInstance&lt;IString,IInteger>) Output_data.createItem();&#xA;&#x9;&#x9;&#x9;&#x9;((IStringInstance)item.Key).Value = occurrences.Key;&#xA;&#x9;&#x9;&#x9;&#x9;((IIntegerInstance)item.Value).Value = occurrences.Value;&#xA;&#x9;&#x9;&#x9;&#x9;output_value_instance.put(item);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" name="IWordCounterImpl.cs" srcType="user" uri="br.ufc.mdcc.hpcshelf.gust.example.cw.impl.WordCounterImpl/bin/1.0.0.0/IWordCounterImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.hpcshelf.gust.example.cw.impl.WordCounterImpl/bin/1.0.0.0/BaseIWordCounterImpl.dll</dependency>
          <dependency>br.ufc.mdcc.hpcshelf.gust.example.cw.WordCounter/bin/1.0.0.0/IWordCounter.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="40" w="141" x="263" y="70">
        <color b="0" g="255" r="0"/>
      </visualDescription>
      <externalReferences>MPI</externalReferences>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit facet="0" iRef="IWordCounterImpl" multiple="false" private="false" replica="0" uRef="map_function" visibleInterface="true">
      <super cRef="base" uRef="map_function"/>
      <visualDescription h="40" w="141" x="394" y="168"/>
    </unit>
  </componentInfo>
</component:component>